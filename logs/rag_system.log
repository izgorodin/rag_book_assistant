2024-10-23 22:03:30,288 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-10-23 22:03:30,289 - httpx - DEBUG - load_verify_locations cafile='/Users/eduardizgorodin/Projects/rag_book_assistant/rag_venv/lib/python3.12/site-packages/certifi/cacert.pem'
2024-10-23 22:03:31,627 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x1189e4220>, 'json_data': {'input': ['Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test run run run run run run run run run run run run run run run try try try try try try try try try try try try try query query query query query query query query query query query query question question question question question question question question question question question question question question question enquiry enquiry enquiry enquiry enquiry enquiry enquiry enquiry enquiry enquiry enquiry enquiry enquiry enquiry enquiry'], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-10-23 22:03:31,652 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/embeddings
2024-10-23 22:03:31,652 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-10-23 22:03:31,781 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x118978a10>
2024-10-23 22:03:31,782 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10bea52d0> server_hostname='api.openai.com' timeout=5.0
2024-10-23 22:03:31,820 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1189789e0>
2024-10-23 22:03:31,821 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-10-23 22:03:31,822 - httpcore.http11 - DEBUG - send_request_headers.complete
2024-10-23 22:03:31,822 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-10-23 22:03:31,822 - httpcore.http11 - DEBUG - send_request_body.complete
2024-10-23 22:03:31,822 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-10-23 22:03:32,078 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 23 Oct 2024 21:03:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-3-small'), (b'openai-organization', b'uinside'), (b'openai-processing-ms', b'36'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'5000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'4999872'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'1ms'), (b'x-request-id', b'req_d567f98a0fc6ed23c973c9cb374e3568'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=tu5FBwl_hn2XYT6qUKIpZtM4dIMaCrCd7hKrmp45jGg-1729717412-1.0.1.1-9t2Jj1MstbJlwMfQ_WIsJZUrxELNQl51WInzdJp.LrQ4hk9IKhvGsnSITtkplLQ9mLF17JSALz_U_r05_JnqLg; path=/; expires=Wed, 23-Oct-24 21:33:32 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=LOZ9nefFTOCjwmWJGWzVcSQfKD4H8cB5YUGbIdy1nSc-1729717412144-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8d74aca08b7f692a-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-10-23 22:03:32,081 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-10-23 22:03:32,082 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-10-23 22:03:32,100 - httpcore.http11 - DEBUG - receive_response_body.complete
2024-10-23 22:03:32,100 - httpcore.http11 - DEBUG - response_closed.started
2024-10-23 22:03:32,101 - httpcore.http11 - DEBUG - response_closed.complete
2024-10-23 22:03:32,101 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers([('date', 'Wed, 23 Oct 2024 21:03:32 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-3-small'), ('openai-organization', 'uinside'), ('openai-processing-ms', '36'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '4999872'), ('x-ratelimit-reset-requests', '6ms'), ('x-ratelimit-reset-tokens', '1ms'), ('x-request-id', 'req_d567f98a0fc6ed23c973c9cb374e3568'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=tu5FBwl_hn2XYT6qUKIpZtM4dIMaCrCd7hKrmp45jGg-1729717412-1.0.1.1-9t2Jj1MstbJlwMfQ_WIsJZUrxELNQl51WInzdJp.LrQ4hk9IKhvGsnSITtkplLQ9mLF17JSALz_U_r05_JnqLg; path=/; expires=Wed, 23-Oct-24 21:33:32 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=LOZ9nefFTOCjwmWJGWzVcSQfKD4H8cB5YUGbIdy1nSc-1729717412144-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '8d74aca08b7f692a-LIS'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2024-10-23 22:03:32,102 - openai._base_client - DEBUG - request_id: req_d567f98a0fc6ed23c973c9cb374e3568
2024-10-23 22:03:33,046 - pinecone.core.openapi.shared.rest - DEBUG - response body: b'{"upsertedCount":1}'
2024-10-23 22:03:33,052 - tests.conftest - INFO - Test test_find_most_relevant_chunks[1] took 2.74 seconds
2024-10-23 22:03:33,457 - pinecone.core.openapi.shared.rest - DEBUG - response body: b'{"upsertedCount":1}'
2024-10-23 22:03:33,459 - tests.conftest - INFO - Test test_find_most_relevant_chunks[2] took 0.41 seconds
2024-10-23 22:03:33,688 - pinecone.core.openapi.shared.rest - DEBUG - response body: b'{"upsertedCount":1}'
2024-10-23 22:03:33,692 - tests.conftest - INFO - Test test_find_most_relevant_chunks[3] took 0.23 seconds
2024-10-23 22:03:33,696 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-10-23 22:03:33,697 - httpx - DEBUG - load_verify_locations cafile='/Users/eduardizgorodin/Projects/rag_book_assistant/rag_venv/lib/python3.12/site-packages/certifi/cacert.pem'
2024-10-23 22:03:33,715 - root - INFO - Generating answer for query: Test query
2024-10-23 22:03:33,720 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a helpful assistant specialized in extracting precise information from texts. Focus on providing accurate information. If the exact information is not available, explain what is known and what is missing.'}, {'role': 'user', 'content': 'Context: Test context\n\nQuestion: Test query\n\nProvide a concise answer based on the context. If specific information is not available, briefly explain what is known and what is missing.'}], 'model': 'gpt-4o-mini', 'max_tokens': 15000}}
2024-10-23 22:03:33,720 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2024-10-23 22:03:33,720 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-10-23 22:03:33,749 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1174a5a60>
2024-10-23 22:03:33,749 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x11002e350> server_hostname='api.openai.com' timeout=5.0
2024-10-23 22:03:33,790 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1174a5910>
2024-10-23 22:03:33,790 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-10-23 22:03:33,791 - httpcore.http11 - DEBUG - send_request_headers.complete
2024-10-23 22:03:33,791 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-10-23 22:03:33,791 - httpcore.http11 - DEBUG - send_request_body.complete
2024-10-23 22:03:33,791 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-10-23 22:03:34,725 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 23 Oct 2024 21:03:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'uinside'), (b'openai-processing-ms', b'750'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'10000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'9991828'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'49ms'), (b'x-request-id', b'req_a88cfd5ba6794bee5b2c1674c5dd361f'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=9ddCjKQIxAvKsfdpC3NMbqWaawPLubwW35eDBdOuOtw-1729717414-1.0.1.1-LstWjLcnKr9o01aW1QzYahsEGwOL7VlGhZFEK94ICWSreQNgFxECsz__RVzWXh9avkNPnjUe2n76iFQg4lMnew; path=/; expires=Wed, 23-Oct-24 21:33:34 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=YAXBmxng6uUxiyHQpZFbvnbIVMLOxPVNUItXMYF9Z58-1729717414791-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8d74acacd88f489f-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-10-23 22:03:34,727 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-10-23 22:03:34,727 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-10-23 22:03:34,728 - httpcore.http11 - DEBUG - receive_response_body.complete
2024-10-23 22:03:34,728 - httpcore.http11 - DEBUG - response_closed.started
2024-10-23 22:03:34,728 - httpcore.http11 - DEBUG - response_closed.complete
2024-10-23 22:03:34,728 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Wed, 23 Oct 2024 21:03:34 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'uinside'), ('openai-processing-ms', '750'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '10000000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '9991828'), ('x-ratelimit-reset-requests', '6ms'), ('x-ratelimit-reset-tokens', '49ms'), ('x-request-id', 'req_a88cfd5ba6794bee5b2c1674c5dd361f'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=9ddCjKQIxAvKsfdpC3NMbqWaawPLubwW35eDBdOuOtw-1729717414-1.0.1.1-LstWjLcnKr9o01aW1QzYahsEGwOL7VlGhZFEK94ICWSreQNgFxECsz__RVzWXh9avkNPnjUe2n76iFQg4lMnew; path=/; expires=Wed, 23-Oct-24 21:33:34 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=YAXBmxng6uUxiyHQpZFbvnbIVMLOxPVNUItXMYF9Z58-1729717414791-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '8d74acacd88f489f-LIS'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2024-10-23 22:03:34,729 - openai._base_client - DEBUG - request_id: req_a88cfd5ba6794bee5b2c1674c5dd361f
2024-10-23 22:03:34,734 - tests.conftest - INFO - Test test_generate_answer[True] took 1.04 seconds
2024-10-23 22:03:34,735 - root - INFO - Generating answer for query: Test query
2024-10-23 22:03:34,737 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a helpful assistant specialized in extracting precise information from texts. Focus on providing accurate information. If the exact information is not available, explain what is known and what is missing.'}, {'role': 'user', 'content': 'Context: Test context\n\nQuestion: Test query\n\nProvide a concise answer based on the context. If specific information is not available, briefly explain what is known and what is missing.'}], 'model': 'gpt-4o-mini', 'max_tokens': 15000}}
2024-10-23 22:03:34,737 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2024-10-23 22:03:34,737 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-10-23 22:03:34,737 - httpcore.http11 - DEBUG - send_request_headers.complete
2024-10-23 22:03:34,737 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-10-23 22:03:34,737 - httpcore.http11 - DEBUG - send_request_body.complete
2024-10-23 22:03:34,737 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-10-23 22:03:35,968 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 23 Oct 2024 21:03:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'uinside'), (b'openai-processing-ms', b'1043'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'10000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'9991828'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'49ms'), (b'x-request-id', b'req_d843b312851270e8096c54de43db5188'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8d74acb2b9e6489f-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-10-23 22:03:35,969 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-10-23 22:03:35,970 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-10-23 22:03:35,971 - httpcore.http11 - DEBUG - receive_response_body.complete
2024-10-23 22:03:35,971 - httpcore.http11 - DEBUG - response_closed.started
2024-10-23 22:03:35,971 - httpcore.http11 - DEBUG - response_closed.complete
2024-10-23 22:03:35,971 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 23 Oct 2024 21:03:36 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'uinside', 'openai-processing-ms': '1043', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '10000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '9991828', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '49ms', 'x-request-id': 'req_d843b312851270e8096c54de43db5188', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8d74acb2b9e6489f-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2024-10-23 22:03:35,972 - openai._base_client - DEBUG - request_id: req_d843b312851270e8096c54de43db5188
2024-10-23 22:03:35,974 - tests.conftest - INFO - Test test_generate_answer[False] took 1.24 seconds
2024-10-23 22:03:35,977 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-10-23 22:03:35,978 - httpx - DEBUG - load_verify_locations cafile='/Users/eduardizgorodin/Projects/rag_book_assistant/rag_venv/lib/python3.12/site-packages/certifi/cacert.pem'
2024-10-23 22:03:35,996 - root - INFO - Processing RAG query: Test query
2024-10-23 22:03:35,996 - pinecone_plugin_interface.logging - INFO - Discovering subpackages in _NamespacePath(['/Users/eduardizgorodin/Projects/rag_book_assistant/rag_venv/lib/python3.12/site-packages/pinecone_plugins'])
2024-10-23 22:03:35,997 - pinecone_plugin_interface.logging - INFO - Looking for plugins in pinecone_plugins.inference
2024-10-23 22:03:35,997 - pinecone_plugin_interface.logging - INFO - Installing plugin inference into Pinecone
2024-10-23 22:03:36,341 - pinecone.core.openapi.shared.rest - DEBUG - response body: b'{"indexes":[{"name":"book-embeddings","metric":"cosine","dimension":1536,"status":{"ready":true,"state":"Ready"},"host":"book-embeddings-uoy9ovm.svc.aped-4627-b74a.pinecone.io","spec":{"serverless":{"region":"us-east-1","cloud":"aws"}},"deletion_protection":"disabled"}]}'
2024-10-23 22:03:36,343 - src.pinecone_manager - INFO - Creating new Pinecone index: book-embeddings
2024-10-23 22:03:36,678 - pinecone.core.openapi.shared.rest - DEBUG - response body: b'{"error":{"code":"ALREADY_EXISTS","message":"Resource  already exists"},"status":409}'
2024-10-23 22:03:36,679 - src.pinecone_manager - INFO - Index book-embeddings already exists. Using existing index.
2024-10-23 22:03:36,680 - src.pinecone_manager - INFO - Successfully initialized Pinecone index: book-embeddings
2024-10-23 22:03:36,881 - pinecone.core.openapi.shared.rest - DEBUG - response body: b'{"upsertedCount":1}'
2024-10-23 22:03:36,882 - root - ERROR - Error in RAG query process: The argument order for `query()` has changed; please use keyword arguments instead of positional arguments. Example: index.query(vector=[0.1, 0.2, 0.3], top_k=10, namespace='my_namespace')
Traceback (most recent call last):
  File "/Users/eduardizgorodin/Projects/rag_book_assistant/src/rag.py", line 112, in rag_query
    relevant_chunks = pinecone_manager.search_similar(query_embedding, top_k=10)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/eduardizgorodin/Projects/rag_book_assistant/src/pinecone_manager.py", line 94, in search_similar
    results = self.index.query(query_embedding, top_k=top_k, include_metadata=True)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/eduardizgorodin/Projects/rag_book_assistant/rag_venv/lib/python3.12/site-packages/pinecone/utils/error_handling.py", line 11, in inner_func
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/eduardizgorodin/Projects/rag_book_assistant/rag_venv/lib/python3.12/site-packages/pinecone/data/index.py", line 406, in query
    raise ValueError(
ValueError: The argument order for `query()` has changed; please use keyword arguments instead of positional arguments. Example: index.query(vector=[0.1, 0.2, 0.3], top_k=10, namespace='my_namespace')
2024-10-23 22:03:36,890 - tests.conftest - INFO - Test test_rag_query[True] took 0.91 seconds
2024-10-23 22:03:36,895 - root - INFO - Processing RAG query: Test query
2024-10-23 22:03:36,896 - pinecone_plugin_interface.logging - INFO - Discovering subpackages in _NamespacePath(['/Users/eduardizgorodin/Projects/rag_book_assistant/rag_venv/lib/python3.12/site-packages/pinecone_plugins'])
2024-10-23 22:03:36,896 - pinecone_plugin_interface.logging - INFO - Looking for plugins in pinecone_plugins.inference
2024-10-23 22:03:36,896 - pinecone_plugin_interface.logging - INFO - Installing plugin inference into Pinecone
2024-10-23 22:03:38,677 - pinecone.core.openapi.shared.rest - DEBUG - response body: b'{"indexes":[{"name":"book-embeddings","metric":"cosine","dimension":1536,"status":{"ready":true,"state":"Ready"},"host":"book-embeddings-uoy9ovm.svc.aped-4627-b74a.pinecone.io","spec":{"serverless":{"region":"us-east-1","cloud":"aws"}},"deletion_protection":"disabled"}]}'
2024-10-23 22:03:38,680 - src.pinecone_manager - INFO - Creating new Pinecone index: book-embeddings
2024-10-23 22:03:38,988 - pinecone.core.openapi.shared.rest - DEBUG - response body: b'{"error":{"code":"ALREADY_EXISTS","message":"Resource  already exists"},"status":409}'
2024-10-23 22:03:38,989 - src.pinecone_manager - INFO - Index book-embeddings already exists. Using existing index.
2024-10-23 22:03:38,989 - src.pinecone_manager - INFO - Successfully initialized Pinecone index: book-embeddings
2024-10-23 22:03:39,230 - pinecone.core.openapi.shared.rest - DEBUG - response body: b'{"upsertedCount":1}'
2024-10-23 22:03:39,230 - root - ERROR - Error in RAG query process: The argument order for `query()` has changed; please use keyword arguments instead of positional arguments. Example: index.query(vector=[0.1, 0.2, 0.3], top_k=10, namespace='my_namespace')
Traceback (most recent call last):
  File "/Users/eduardizgorodin/Projects/rag_book_assistant/src/rag.py", line 112, in rag_query
    relevant_chunks = pinecone_manager.search_similar(query_embedding, top_k=10)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/eduardizgorodin/Projects/rag_book_assistant/src/pinecone_manager.py", line 94, in search_similar
    results = self.index.query(query_embedding, top_k=top_k, include_metadata=True)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/eduardizgorodin/Projects/rag_book_assistant/rag_venv/lib/python3.12/site-packages/pinecone/utils/error_handling.py", line 11, in inner_func
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/eduardizgorodin/Projects/rag_book_assistant/rag_venv/lib/python3.12/site-packages/pinecone/data/index.py", line 406, in query
    raise ValueError(
ValueError: The argument order for `query()` has changed; please use keyword arguments instead of positional arguments. Example: index.query(vector=[0.1, 0.2, 0.3], top_k=10, namespace='my_namespace')
2024-10-23 22:03:39,232 - tests.conftest - INFO - Test test_rag_query[False] took 2.34 seconds
2024-10-23 22:03:39,237 - tests.conftest - INFO - Test test_rag_query_with_different_queries[Short query] took 0.00 seconds
2024-10-23 22:03:39,239 - tests.conftest - INFO - Test test_rag_query_with_different_queries[A very long query that contains multiple sentences and specific terms] took 0.00 seconds
2024-10-23 22:03:39,240 - tests.conftest - INFO - Test test_rag_query_with_different_queries[] took 0.00 seconds
2024-10-23 22:03:39,241 - tests.conftest - INFO - Test test_rag_query_performance took 0.00 seconds
2024-10-23 22:03:39,242 - tests.conftest - INFO - Test test_rag_error_handling took 0.00 seconds
