name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel setuptools
          pip install -r requirements.txt
          pip install -e .
          pip install flake8 pytest

      - name: Download NLTK data
        run: |
          python -c "import nltk; \
          nltk.download('punkt'); \
          nltk.download('stopwords'); \
          nltk.download('wordnet'); \
          nltk.download('words'); \
          nltk.download('averaged_perceptron_tagger'); \
          nltk.download('omw-1.4'); \
          nltk.download('tagsets'); \
          nltk.download('maxent_ne_chunker'); \
          nltk.download('universal_tagset')"

      - name: Run linter
        run: flake8 . --verbose
        continue-on-error: true

      - name: Run tests
        run: python -m pytest tests -v --capture=no     
        continue-on-error: true

  docker_build:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/rag_book_assistant:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/rag_book_assistant:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/rag_book_assistant:buildcache,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: docker_build
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Railway CLI
        run: npm i -g @railway/cli
        
      - name: Deploy to Railway
        run: |
          railway up --service rag_book_assistant
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}

  healthcheck:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Check deployment health
        uses: jtalk/url-health-check-action@v3
        with:
          url: https://bookassistant.up.railway.app/health
          max-attempts: 5
          retry-delay: 30s